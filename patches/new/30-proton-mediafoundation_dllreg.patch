From 1fc78e8b3ea44a4edebe2ca5f5170ae948adc644 Mon Sep 17 00:00:00 2001
From: Andrew Eikum <aeikum@codeweavers.com>
Date: Thu, 30 Jan 2020 10:16:19 -0600
Subject: [PATCH] winegstreamer: HACK: Use a different gst registry file per
 architecture

---
 dlls/winegstreamer/wg_parser.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 013566b25e9..0a6cf927187 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -1949,6 +1949,22 @@ static void init_gstreamer_once(void)
     int argc = ARRAY_SIZE(args) - 1;
     char **argv = args;
     GError *err;
+    const char *e;
+
+    if ((e = getenv("WINE_GST_REGISTRY_DIR")))
+    {
+        char gst_reg[PATH_MAX];
+#if defined(__x86_64__)
+        const char *arch = "/registry.x86_64.bin";
+#elif defined(__i386__)
+        const char *arch = "/registry.i386.bin";
+#else
+#error Bad arch
+#endif
+        strcpy(gst_reg, e);
+        strcat(gst_reg, arch);
+        setenv("GST_REGISTRY_1_0", gst_reg, 1);
+    }

     if (!gst_init_check(&argc, &argv, &err))
     {

From 77946e9d0ff393ac66eda8d11a3aa22204d4ad53 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Tue, 28 Jan 2020 14:30:43 -0600
Subject: [PATCH] winegstreamer: HACK: Try harder to register winegstreamer
 filters.

---
 dlls/quartz/filtergraph.c | 17 +++++++++++++++++
 dlls/winegstreamer/main.c |  2 ++
 2 files changed, 19 insertions(+)

diff --git a/dlls/quartz/filtergraph.c b/dlls/quartz/filtergraph.c
index d20687c1b38..62d22f96cea 100644
--- a/dlls/quartz/filtergraph.c
+++ b/dlls/quartz/filtergraph.c
@@ -5584,11 +5584,28 @@ static const IUnknownVtbl IInner_VTable =
     FilterGraphInner_Release
 };

+static BOOL CALLBACK register_winegstreamer_proc(INIT_ONCE *once, void *param, void **ctx)
+{
+    HMODULE mod = LoadLibraryW(L"winegstreamer.dll");
+    if (mod)
+    {
+        HRESULT (WINAPI *proc)(void) = (void *)GetProcAddress(mod, "DllRegisterServer");
+        proc();
+        FreeLibrary(mod);
+    }
+    return TRUE;
+}
+
 static HRESULT filter_graph_common_create(IUnknown *outer, IUnknown **out, BOOL threaded)
 {
+    static INIT_ONCE once = INIT_ONCE_STATIC_INIT;
     struct filter_graph *object;
     HRESULT hr;

+    /* HACK: our build system makes it difficult to load gstreamer on prefix
+     * creation, so it won't get registered. Do that here instead. */
+    InitOnceExecuteOnce(&once, register_winegstreamer_proc, NULL, NULL);
+
     *out = NULL;

     if (!(object = calloc(1, sizeof(*object))))
diff --git a/dlls/winegstreamer/main.c b/dlls/winegstreamer/main.c
index ac9a3201792..600ba090312 100644
--- a/dlls/winegstreamer/main.c
+++ b/dlls/winegstreamer/main.c
@@ -527,6 +527,8 @@ HRESULT WINAPI DllRegisterServer(void)

     TRACE(".\n");

+    init_gstreamer();
+
     if (FAILED(hr = __wine_register_resources()))
         return hr;

From 5b64473d19136cddfad649b38e00e87ceaa76bb3 Mon Sep 17 00:00:00 2001
From: Andrew Eikum <aeikum@codeweavers.com>
Date: Fri, 18 Dec 2020 14:08:04 -0600
Subject: [PATCH] mfplat: Register winegstreamer interfaces on load

See also "winegstreamer: HACK: Try harder to register winegstreamer
filters."
---
 dlls/mfplat/main.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/dlls/mfplat/main.c b/dlls/mfplat/main.c
index f36c960f852..47454310234 100644
--- a/dlls/mfplat/main.c
+++ b/dlls/mfplat/main.c
@@ -1442,6 +1442,18 @@ HRESULT WINAPI MFTUnregister(CLSID clsid)
     return S_OK;
 }

+static BOOL CALLBACK register_winegstreamer_proc(INIT_ONCE *once, void *param, void **ctx)
+{
+    HMODULE mod = LoadLibraryW(L"winegstreamer.dll");
+    if (mod)
+    {
+        HRESULT (WINAPI *proc)(void) = (void *)GetProcAddress(mod, "DllRegisterServer");
+        proc();
+        FreeLibrary(mod);
+    }
+    return TRUE;
+}
+
 /***********************************************************************
  *      MFStartup (mfplat.@)
  */
@@ -1449,9 +1461,12 @@ HRESULT WINAPI MFStartup(ULONG version, DWORD flags)
 {
 #define MF_VERSION_XP   MAKELONG( MF_API_VERSION, 1 )
 #define MF_VERSION_WIN7 MAKELONG( MF_API_VERSION, 2 )
+    static INIT_ONCE once = INIT_ONCE_STATIC_INIT;

     TRACE("%#lx, %#lx.\n", version, flags);

+    InitOnceExecuteOnce(&once, register_winegstreamer_proc, NULL, NULL);
+
     if (version != MF_VERSION_XP && version != MF_VERSION_WIN7)
         return MF_E_BAD_STARTUP_VERSION;

