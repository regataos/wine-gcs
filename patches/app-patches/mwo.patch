diff --git a/dlls/ntdll/path.c b/dlls/ntdll/path.c
index 5f2d379071..a0047c2326 100644
--- a/dlls/ntdll/path.c
+++ b/dlls/ntdll/path.c
@@ -443,13 +443,29 @@ static const WCHAR *skip_unc_prefix( const WCHAR *ptr )
  * Helper for RtlGetFullPathName_U
  * Note: name and buffer are allowed to point to the same memory spot
  */
+static const WCHAR envvarW[] = {'S','t','e','a','m','G','a','m','e','I','d',0};
+static const WCHAR mwoW[] = {'3','4','2','2','0','0',0};
+
 static ULONG get_full_path_helper(LPCWSTR name, LPWSTR buffer, ULONG size)
 {
     ULONG                       reqsize = 0, mark = 0, dep = 0, deplen;
     LPWSTR                      ins_str = NULL;
     LPCWSTR                     ptr;
     const UNICODE_STRING*       cd;
-    WCHAR                       tmp[4];
+    WCHAR                       tmp[4], *value;
+    SIZE_T len = 1024;
+    BOOL mwo = FALSE;
+    value = RtlAllocateHeap( GetProcessHeap(), 0, len * sizeof(WCHAR) );
+
+    if (NT_SUCCESS(RtlQueryEnvironmentVariable( NULL, envvarW, wcslen(envvarW), value, len - 1, &len )))
+    {
+        value[len] = '\0';
+
+        if (wcscmp(value, mwoW) == 0)
+            mwo = TRUE;
+    }
+
+    RtlFreeHeap( GetProcessHeap(), 0, value );
 
     /* return error if name only consists of spaces */
     for (ptr = name; *ptr; ptr++) if (*ptr != ' ') break;
@@ -457,10 +473,13 @@ static ULONG get_full_path_helper(LPCWSTR name, LPWSTR buffer, ULONG size)
 
     RtlAcquirePebLock();
 
-    if (NtCurrentTeb()->Tib.SubSystemTib)  /* FIXME: hack */
-        cd = &((WIN16_SUBSYSTEM_TIB *)NtCurrentTeb()->Tib.SubSystemTib)->curdir.DosPath;
-    else
-        cd = &NtCurrentTeb()->Peb->ProcessParameters->CurrentDirectory.DosPath;
+    cd = &NtCurrentTeb()->Peb->ProcessParameters->CurrentDirectory.DosPath;
+    
+    if (NtCurrentTeb()->Tib.SubSystemTib) {      /* FIXME: hack */
+        if (!mwo) {
+            cd = &((WIN16_SUBSYSTEM_TIB *)NtCurrentTeb()->Tib.SubSystemTib)->curdir.DosPath;
+        }
+    }
 
     switch (RtlDetermineDosPathNameType_U(name))
     {
