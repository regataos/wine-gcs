From e0bb7d1c458587a4ac5ba248de8a05f0b929bcd1 Mon Sep 17 00:00:00 2001
From: Andrew Eikum <aeikum@codeweavers.com>
Date: Mon, 10 Dec 2018 12:48:41 -0600
Subject: [PATCH] xaudio2: Set PulseAudio application name property in the
 environment

So PA doesn't present all Wine applications as "wine-preloader", and
allows PA to store per-application settings.
---
 dlls/winepulse.drv/mmdevdrv.c |  1 +
 dlls/xaudio2_7/xaudio_dll.c   | 21 +++++++++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/dlls/winepulse.drv/mmdevdrv.c b/dlls/winepulse.drv/mmdevdrv.c
index 35a66e18d8a..f96b28c7c08 100644
--- a/dlls/winepulse.drv/mmdevdrv.c
+++ b/dlls/winepulse.drv/mmdevdrv.c
@@ -245,6 +245,7 @@ static char *get_application_name(void)
     if (!(str = malloc(len)))
         return NULL;
     WideCharToMultiByte(CP_UNIXCP, 0, name, -1, str, len, NULL, NULL);
+    SetEnvironmentVariableA("PULSE_PROP_application.name", str);
     return str;
 }

diff --git a/dlls/xaudio2_7/xaudio_dll.c b/dlls/xaudio2_7/xaudio_dll.c
index 699b904a131..1d5e8bf39ec 100644
--- a/dlls/xaudio2_7/xaudio_dll.c
+++ b/dlls/xaudio2_7/xaudio_dll.c
@@ -38,6 +38,7 @@
 #include "wine/asm.h"
 #include "wine/debug.h"
 #include "wine/heap.h"
+#include "wine/unicode.h"

 WINE_DEFAULT_DEBUG_CHANNEL(xaudio2);

@@ -1951,6 +1952,26 @@ static HRESULT WINAPI XAudio2CF_CreateInstance(IClassFactory *iface, IUnknown *p
     pthread_cond_init(&object->mst.engine_done, NULL);
     pthread_cond_init(&object->mst.engine_ready, NULL);

+    /* set PulseAudio's application.name in the environment since FAudio and
+     * SDL provide no way to pass this in */
+    {
+        WCHAR path[MAX_PATH], *name;
+        char *str;
+        DWORD len;
+
+        GetModuleFileNameW(NULL, path, ARRAY_SIZE(path));
+        name = strrchrW(path, '\\');
+        if (!name)
+            name = path;
+        else
+            name++;
+        len = WideCharToMultiByte(CP_UNIXCP, 0, name, -1, NULL, 0, NULL, NULL);
+        str = HeapAlloc(GetProcessHeap(), 0, len);
+        WideCharToMultiByte(CP_UNIXCP, 0, name, -1, str, len, NULL, NULL);
+        setenv("PULSE_PROP_application.name", str, 1);
+        HeapFree(GetProcessHeap(), 0, str);
+    }
+
     FAudioCOMConstructWithCustomAllocatorEXT(
         &object->faudio,
         XAUDIO2_VER,
