From c099ae745b3a63edee1677a2da01cab5aa5b8562 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Tue, 28 Jan 2020 14:30:43 -0600
Subject: [PATCH] winegstreamer: HACK: Try harder to register winegstreamer
 filters.

The IDL declarations should actually be unnecessary with the quartz part, but there's a chance that an application will try to create filters before it creates the graph.
---
 dlls/quartz/filtergraph.c     | 17 +++++++++++++++++
 dlls/winegstreamer/winegstreamer_classes.idl | 21 +++++++++++++++++++++
 2 files changed, 38 insertions(+)

diff --git a/dlls/quartz/filtergraph.c b/dlls/quartz/filtergraph.c
index 1ed41bdcec5..0af6e1ded5f 100644
--- a/dlls/quartz/filtergraph.c
+++ b/dlls/quartz/filtergraph.c
@@ -5681,11 +5681,28 @@ static const IUnknownVtbl IInner_VTable =
     FilterGraphInner_Release
 };
 
+static BOOL CALLBACK register_winegstreamer_proc(INIT_ONCE *once, void *param, void **ctx)
+{
+    HMODULE mod = LoadLibraryW(L"winegstreamer.dll");
+    if (mod)
+    {
+        HRESULT (WINAPI *proc)(void) = (void *)GetProcAddress(mod, "DllRegisterServer");
+        proc();
+        FreeLibrary(mod);
+    }
+    return TRUE;
+}
+
 static HRESULT filter_graph_common_create(IUnknown *outer, IUnknown **out, BOOL threaded)
 {
+    static INIT_ONCE once = INIT_ONCE_STATIC_INIT;
     struct filter_graph *object;
     HRESULT hr;
 
+    /* HACK: our build system makes it difficult to load gstreamer on prefix
+     * creation, so it won't get registered. Do that here instead. */
+    InitOnceExecuteOnce(&once, register_winegstreamer_proc, NULL, NULL);
+
     *out = NULL;
 
     fimpl = CoTaskMemAlloc(sizeof(*fimpl));

From eddbdd21c623bd041962fe4f91733c6696188d89 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <zfigura@codeweavers.com>
Date: Tue, 11 Aug 2020 14:03:20 -0500
Subject: [PATCH] HACK: winegstreamer: Increase decodebin internal buffering

This helps choppy audio due to OGG frame decoding seen in Worms
Revolution and BlazBlue Centralfiction.
---
 dlls/winegstreamer/wg_parser.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 2d4d4f46327..2629df78ed1 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -1615,6 +1615,10 @@ static BOOL decodebin_parser_init_gst(struct wg_parser *parser)
     g_signal_connect(element, "autoplug-select", G_CALLBACK(autoplug_select_cb), parser);
     g_signal_connect(element, "no-more-pads", G_CALLBACK(no_more_pads_cb), parser);

+    g_object_set(G_OBJECT(element), "max-size-buffers", G_MAXUINT, NULL);
+    g_object_set(G_OBJECT(element), "max-size-time", G_MAXUINT64, NULL);
+    g_object_set(G_OBJECT(element), "max-size-bytes", G_MAXUINT, NULL);
+
     parser->their_sink = gst_element_get_static_pad(element, "sink");

     pthread_mutex_lock(&parser->mutex);
From afc22791db23d52c13b7f7cbb3eeacde21b381ed Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Wed, 21 Oct 2020 16:03:21 -0500
Subject: [PATCH] winegstreamer: Allow videoconvert to parallelize.

Not sure if this should be called a hack. It's not the *best* solution to the problem, but it's not a wrong one either.

Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
---
 dlls/winegstreamer/wg_parser.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 2629df78ed1..a625f000254 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -1029,6 +1029,9 @@ static void pad_added_cb(GstElement *element, GstPad *pad, gpointer user)
             goto out;
         }

+        /* Let GStreamer choose a default number of threads. */
+        gst_util_set_object_arg(G_OBJECT(vconv), "n-threads", "0");
+
         /* GStreamer outputs RGB video top-down, but DirectShow expects bottom-up. */
         if (!(flip = gst_element_factory_make("videoflip", NULL)))
         {
From aa52473db040db290296cd65191f87c831bf2878 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Tue, 20 Oct 2020 17:03:24 -0500
Subject: [PATCH] HACK: winegstreamer: Use capssetter to ignore non-default YUV
 color spaces.

---
 dlls/winegstreamer/wg_parser.c | 53 ++++++++++++++++++++++++++++++++--
 1 file changed, 51 insertions(+), 2 deletions(-)

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index a625f000254..be27b00cfd0 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -1293,7 +1293,17 @@ static void pad_added_cb(GstElement *element, GstPad *pad, gpointer user)
 
     if (!strcmp(name, "video/x-raw"))
     {
-        GstElement *deinterlace, *vconv, *flip, *videobox, *vconv2;
+        GstElement *capssetter, *deinterlace, *vconv, *flip, *videobox, *vconv2;
+        /* Hack?: Flatten down the colorimetry to default values, without
+         * actually modifying the video at all.*/
+        if (!(capssetter = gst_element_factory_make("capssetter", NULL)))
+        {
+            GST_ERROR("Failed to create capssetter, are %u-bit GStreamer \"good\" plugins installed?\n",
+                    8 * (int)sizeof(void *));
+            goto out;
+        }
+        gst_util_set_object_arg(G_OBJECT(capssetter), "join", "true");
+        gst_util_set_object_arg(G_OBJECT(capssetter), "caps", "video/x-raw,colorimetry=0:0:0:0");
 
         /* DirectShow can express interlaced video, but downstream filters can't
          * necessarily consume it. In particular, the video renderer can't. */
@@ -1050,6 +1096,8 @@ static void pad_added_cb(GstElement *element, GstPad *pad, gpointer user)
         }

         /* The bin takes ownership of these elements. */
+        gst_bin_add(GST_BIN(parser->container), capssetter);
+        gst_element_sync_state_with_parent(capssetter);
         gst_bin_add(GST_BIN(parser->container), deinterlace);
         gst_element_sync_state_with_parent(deinterlace);
         gst_bin_add(GST_BIN(parser->container), vconv);
@@ -1373,6 +1383,7 @@ static void pad_added_cb(GstElement *element, GstPad *pad, gpointer user)
         gst_bin_add(GST_BIN(parser->container), vconv2);
         gst_element_sync_state_with_parent(vconv2);
 
+        gst_element_link(capssetter, deinterlace);
         gst_element_link(deinterlace, vconv);
         gst_element_link(vconv, flip);
         if (videobox)
@@ -1385,7 +1396,7 @@ static void pad_added_cb(GstElement *element, GstPad *pad, gpointer user)
             gst_element_link(flip, vconv2);
         }
 
-        stream->post_sink = gst_element_get_static_pad(deinterlace, "sink");
+        stream->post_sink = gst_element_get_static_pad(capssetter, "sink");
         stream->post_src = gst_element_get_static_pad(vconv2, "src");
         stream->flip = flip;
         stream->box = videobox;

From 03891654faf9271d81240faf9cd4f471ca5832f9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 12 Nov 2021 16:35:52 +0100
Subject: [PATCH] winegstreamer: Unblock initializing parser on disconnect.

The decoder may be destroyed while the parsed is still initializing and
we need to notify it, before closing the helper and reader threads, so
that it terminates as well.

This fixes Biomutant intro videos not playing.

CW-Bug-ID: #18970
CW-Bug-ID: #19608
---
 dlls/winegstreamer/decode_transform.c | 5 ++---
 dlls/winegstreamer/wg_parser.c        | 4 ++++
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/dlls/winegstreamer/decode_transform.c b/dlls/winegstreamer/decode_transform.c
index 64e1c84b2ba..b676249cf52 100644
--- a/dlls/winegstreamer/decode_transform.c
+++ b/dlls/winegstreamer/decode_transform.c
@@ -157,11 +157,11 @@ static ULONG WINAPI mf_decoder_Release(IMFTransform *iface)
             decoder->output_type = NULL;
         }

-        if (decoder->wg_stream)
-            unix_funcs->wg_parser_disconnect(decoder->wg_parser);
-
         if (decoder->wg_parser)
+        {
+            unix_funcs->wg_parser_disconnect(decoder->wg_parser);
             unix_funcs->wg_parser_destroy(decoder->wg_parser);
+        }

         DeleteCriticalSection(&decoder->cs);
         DeleteCriticalSection(&decoder->help_cs);

diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index c23500869ce..751282cb8d4 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -2207,9 +2207,13 @@ static void CDECL wg_parser_disconnect(struct wg_parser *parser)

     /* Unblock all of our streams. */
     pthread_mutex_lock(&parser->mutex);
+    parser->flushing = true;
+    parser->no_more_pads = true;
+    pthread_cond_signal(&parser->init_cond);
     for (i = 0; i < parser->stream_count; ++i)
     {
         parser->streams[i]->flushing = true;
+        pthread_cond_signal(&parser->streams[i]->event_cond);
         pthread_cond_signal(&parser->streams[i]->event_empty_cond);
     }
     pthread_mutex_unlock(&parser->mutex);
